import Link from "next/link";
import { Highlight } from "@/app/_utils/Highlight";
import { Toc } from "../../_toc";
import { Breadcrumb } from "@/app/_utils/Breadcrumb";
import { ogp } from "@/app/_utils/metadata";

export const metadata = ogp({
  title: "Server GraphQL schema file reference",
});

export default function OperationFile() {
  return (
    <Toc>
      <main>
        <Breadcrumb
          parents={[{ label: "References", href: "/references" }]}
          current="Server GraphQL schema file reference"
        />
        <h2>Server GraphQL file reference</h2>
        <p>
          The <b>server GraphQL schema file</b> is generated by the{" "}
          <code>nitrogql generate</code> command and written to the path
          specified by the{" "}
          <Link href="/configuration/options#generate.serverGraphqlOutput">
            <code>generate.serverGraphqlOutput</code>
          </Link>{" "}
          option.
        </p>
        <p>
          This file is useful for server-side code where you need to supply a
          GraphQL schema to a GraphQL server.
        </p>
        <p>
          This file contains your entire GraphQL schema as a string. In
          addition, as it is made a TypeScript file which exports{" "}
          <code>schema</code>, you do not need to do file system access by
          yourself. With this file, passing your schema to a server is as simple
          as:
        </p>
        <Highlight language="typescript">
          {`import { schema } from "./generated/serverGraphql";
import { Resolvers } from "./generated/resolvers";
import { ApolloServer } from "apollo-server";

const resolvers: Resolvers<{}> = { /* ... */ };

const server = new ApolloServer({
  typeDefs: schema,
  resolvers,
});`}
        </Highlight>
      </main>
    </Toc>
  );
}
